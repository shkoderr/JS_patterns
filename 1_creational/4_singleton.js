//Singleton — это шаблон проектирования, который говорит нам, что мы можем создать только один экземпляр класса, и к этому экземпляру можно получить глобальный доступ. Это один из основных типов шаблонов проектирования. Это гарантирует, что класс действует как единый источник входа для всех потребительских компонентов, которые хотят получить доступ к этому состоянию.

class Database {
  constructor(data) {
    if(Database.exists) {   //если при инициализации нового класса, у нас есть флаг exist, т.е. мы его ранее проинициалзировали,  то мы останавливаем процесс создания новго инстанса и возвращаем старый
      return Database.instanse
    }
    Database.instanse = this
    Database.exists = true
    this.data = data
  }

  getData() {
    return this.data
  }
}

const mongo = new Database('MongoDB')
console.log(mongo.getData()) //MongoDB

const mysql = new Database('MySQL')
console.log(mysql.getData()) //MongoDB

//Почему так произошло? 
//Сначала мы создали объект mongo и Database принял этот объект в инстанс. Поэтому при создании нового объекта, проходя проверку в конструкторе класса мы получаем старый инстанс.